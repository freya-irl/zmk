/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define nubs NON_US_BSLH
#define sqot SINGLE_QUOTE

&mt     {
        retro-tap;
         };

&sl     {
         release-after-ms = <150>;
         };

//&kscan {
//         debounce-period = <10>;
//        };

/ {
        combos {
                compatible = "zmk,combos";
                combo_bksp {
                        timeout-ms = <30>;
                        key-positions = <19 20>;
                        bindings = <&kp BACKSPACE>;
                };
                combo_backwards_del {
                        timeout-ms = <45>;
                        key-positions = <19 20 21>;
                        bindings = <&kp LC(BACKSPACE)>;
                };
                combo_capslock {
                        timeout-ms = <50>;
                        key-positions = <16 19>;
                        bindings = <&kp CAPSLOCK>;
                };
                combo_tab {
                        timeout-ms = <50>;
                        key-positions = <15 16>;
                        bindings = <&kp TAB>;
                };
                combo_adj {
                        timeout-ms = <50>;
                        key-positions = <37 39>;
                        bindings = <&mo 4>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|   Q   |   W   |   E   |   R   |   T   |     split     |   Y   |   U   |   I   |   O   |   P   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|   DEL  |
// ---------|   A   |   S   |   D   |   F   |   G   |     split     |   H   |   J   |   K   |   L   |   '   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   Z   |   X   |   C   |   V   |   B   |     split     |   N   |   M   |   ,   |   .   |   -   |---------
//          -----------------------------------------               -----------------------------------------
//                          |  LGUI | LOWER | LSHFT |     split     | RAISE |  SPC  |  LALT |
//                          -------------------------               -------------------------
      bindings = <
    &kp ESC       &kp Q  &kp W   &kp E    &kp R  &kp T      /*split*/  &kp Y  &kp U   &kp I     &kp O   &kp O   &kp DEL
    &mt LCTRL TAB &kp A  &kp S   &kp D    &kp F  &kp G      /*split*/  &kp H  &kp J   &kp K     &kp L   &kp SQT &kp RET
                  &kp Z  &kp X   &kp C    &kp V  &kp B      /*split*/  &kp N  &kp M   &kp COMMA &kp DOT &kp MINUS 
                       &mt LGUI LG(SPACE) &mo 1  &kp LSHFT  /*split*/  &mo 2  &kp SPACE &kp LALT

                        >;
                sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
                };

                lower_layer {
//          -----------------------------------------               ----------------------------------------- 
// ---------|       |  HOME |   UP  |  END  |       |     split     |   %   |   7   |   8   |   9   |   =   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|   DEL  |
// ---------| C LEFT|  LEFT | DOWN  | RIGHT |C RIGHT|     split     |   *   |   4   |   5   |   6   |   +   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|       |  PGDN |       |  PGUP |       |     split     |   /   |   1   |   2   |   3   |   -   |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |       |   ,   |     split     |   .   |  SPC  |   0   |
//                          -------------------------               -------------------------
      bindings = <
    &kp ESC   &none        &kp HOME  &kp UP   &kp END   &none         /*split*/   &kp LS(N5) &kp N7 &kp N8 &kp N9 &kp EQUAL  &kp DEL
    &kp LCTRL &kp LC(LEFT) &kp LEFT  &kp DOWN &kp RIGHT &kp LC(RIGHT) /*split*/   &kp LS(N8) &kp N4 &kp N5 &kp N6 &kp PLUS   &kp RET
              &none        &kp PG_DN &none    &kp PG_UP &none         /*split*/   &kp SLASH  &kp N1 &kp N2 &kp N3 &kp MINUS 
                                     &none    &none     &kp COMMA     /*split*/   &kp DOT    &kp SPACE &kp N0 

                        >;

                };

                raise_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|   @   |   $   |   €   |   ^   |   !   |     split     |   ?   |   ü   |   #   |   ö   |   `   |---------
// |  ESC   |----------------------------------------               ----------------------------------------|   DEL  |
// ---------|   ä   |   ß   |       |   °   |   &   |     split     |   *   |   (   |   )   |   ~   |   "   |---------
// |  CTRL  |----------------------------------------               ----------------------------------------|   RET  |
// ---------|   {   |   }   |   [   |   ]   |   |   |     split     |   /   |   \   |   ;   |   :   |   _   |---------
//          -----------------------------------------               -----------------------------------------
//                          |   <   |   >   | LSHIFT|     split     |       |  SPC  | ADJUST|
//                          -------------------------               -------------------------
      bindings = <
    &kp ESC   &kp AT    &kp DOLLAR &kp RA(N5)    &kp RA(LS(N6))   &kp LS(N1)   /*split*/   &kp QUESTION &kp RA(Y)  &kp HASH      &kp RA(P)  &kp GRAVE   &kp DEL
    &kp LCTRL &kp RA(Q) &kp RA(S)  &none         &kp RA(LS(SEMI)) &kp LS(N7)   /*split*/   &kp LS(N8)   &kp LS(N9) &kp LS(N0)    &kp TILDE  &kp LS(SQT) &kp RET
              &kp LBRC  &kp RBRC   &kp LBKT      &kp RBKT         &kp PIPE     /*split*/   &kp SLASH    &kp BSLH   &kp SEMICOLON &kp COLON  &kp UNDER 
                                   &kp LS(COMMA) &kp LS(DOT)      &kp LSHFT    /*split*/   &none        &kp SPACE  &mo 3

                        >;
                        
                };

                adjust_layer {
//          -----------------------------------------               -----------------------------------------
// ---------|  SAT+ |  HUE+ |  ANI+ |  SPI  |  TOG  |     split     |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |---------
// |  BRI+  |----------------------------------------               ----------------------------------------| BT CLR |
// ---------|  SAT- |  HUE- |  ANI+ |  SPD  |       |     split     |       |       |       |       |       |---------
// |  BRI-  |----------------------------------------               ----------------------------------------|        |
// ---------|       |       |       |       | RESET |     split     | BOOT  |       |       |       |       |---------
//          -----------------------------------------               -----------------------------------------
//                          |       |       |       |     split     |       |       |       |
//                          -------------------------               -------------------------
      bindings = <
    &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &rgb_ug RGB_SPI &rgb_ug RGB_TOG  /*split*/  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
    &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &rgb_ug RGB_SPD &none            /*split*/  &none        &none        &none        &none        &none        &none
                    &none           &none           &none           &none           &reset           /*split*/  &bootloader  &none        &none        &none        &none
                                                    &none           &none           &none            /*split*/  &none        &none        &trans

                        >;

                };
        };
};
